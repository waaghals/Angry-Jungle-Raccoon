//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;

namespace BarometerDomain.Model
{
    public class Project : IEntity
    {
        public Project()
        {
            ProjectPeriod = new List<ProjectPeriod>();
            Skill = new List<Skill>();
            Groups = new List<Group>();
        }
        public int Id { get; set; }
        [Required]
        public string Name
        {
            get;
            set;
        }
        [Required]
        public string Description
        {
            get;
            set;
        }
        [Required]
        public bool Anonymous
        {
            get;
            set;
        }

        [Required]
        public ScoreType ScoreType
        {
            get;
            set;
        }

        public virtual IList<ProjectPeriod> ProjectPeriod
        {
            get;
            set;
        }

        public virtual IList<Skill> Skill
        {
            get;
            set;
        }

        public virtual IList<Group> Groups
        { get; set; }

        public virtual User ProjectDocent
        {
            get;
            set;
        }

        public IList<Evaluation> GetAverageEvaluations(Student student)
        {
            IList<Evaluation> averageEvaluationList = new List<Evaluation>();
            int projectperiods = 0;
            foreach (ProjectPeriod projectPeriod in ProjectPeriod)
            {
                Boolean counted = false;
                foreach (Evaluation evaluation in projectPeriod.Evaluation)
                {
                    if (!counted)
                    {
                        projectperiods += 1;
                        counted = true;
                    }
                   if (evaluation.For.Id == student.Id)
                    {
                        Boolean added = false;
                        if (averageEvaluationList.Count != 0)
                        {
                            if (!added)
                            {
                                foreach (Evaluation averageEvaluation in averageEvaluationList)
                                {
                                    if (evaluation.By.Id == averageEvaluation.By.Id  && evaluation.Skill.Category == averageEvaluation.Skill.Category)
                                    {
                                        averageEvaluation.Grade = averageEvaluation.Grade + evaluation.Grade;
                                        added = true;
                                    }
                                }
                            }
                            if (!added)
                            {
                                averageEvaluationList.Add(evaluation);
                            }
                        }
                        else if (!added)
                        {
                            added = true;
                            averageEvaluationList.Add(evaluation);
                        }
                    }
                }
            }
            foreach (Evaluation evaluation in averageEvaluationList)
            {
                evaluation.Grade = evaluation.Grade / projectperiods;
            }
            return averageEvaluationList;
        }

    }
}
