//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;

namespace BarometerDomain.Model
{
    public class Project : IEntity
    {
        public Project()
        {
            ProjectPeriod = new List<ProjectPeriod>();
            Skill = new List<Skill>();
            Groups = new List<Group>();
        }
        public int Id { get; set; }
        [Required]
        public string Name
        {
            get;
            set;
        }
        [Required]
        public string Description
        {
            get;
            set;
        }
        [Required]
        public bool Anonymous
        {
            get;
            set;
        }

        [Required]
        public ScoreType ScoreType
        {
            get;
            set;
        }

        public virtual IList<ProjectPeriod> ProjectPeriod
        {
            get;
            set;
        }

        public virtual IList<Skill> Skill
        {
            get;
            set;
        }

        public virtual IList<Group> Groups
        { get; set; }

        public virtual User ProjectDocent
        {
            get;
            set;
        }

        public IList<Evaluation> GetAverageEvaluations(Student student)
        {
            IList<Evaluation> evaluationList = new List<Evaluation>();
            foreach(ProjectPeriod projectPeriod in ProjectPeriod)
            {
                foreach(Evaluation evaluation in projectPeriod.Evaluation)
                {
                    Boolean added = false;
                    foreach(Evaluation averageEvaluation in evaluationList)
                    {
                        if (averageEvaluation != null)
                        {
                            if(evaluation.By == averageEvaluation.By && evaluation.For == averageEvaluation.For && evaluation.Skill == averageEvaluation.Skill && !added)
                            {
                                averageEvaluation.Grade = averageEvaluation.Grade + evaluation.Grade;
                                added = true;
                            }
                            else if (!added)
                            {
                                evaluationList.Add(evaluation);
                                added = true;
                            }
                        }
                        else if (!added)
                        {
                            added = true;
                            evaluationList.Add(evaluation);
                        }
                        
                    }
                }
            }
            foreach(Evaluation evaluation in evaluationList)
            {
                evaluation.Grade = evaluation.Grade / ProjectPeriod.Count;
            }
            return evaluationList;
        }

    }
}
